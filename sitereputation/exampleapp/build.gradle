apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion 31
    defaultConfig {
        applicationId 'com.sudoplatform.sitereputationexample'
        minSdkVersion 23
        targetSdkVersion 31
        versionCode 1
        versionName "1.0.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            testCoverageEnabled true
        }
    }
    compileOptions {
        sourceCompatibility 1.8
        targetCompatibility 1.8
    }
    kotlinOptions {
        jvmTarget = "1.8"
    }

    packagingOptions {
        pickFirst("META-INF/atomicfu.kotlin_module")
        pickFirst("META-INF/kotlinx-coroutines-core.kotlin_module")
    }

    buildFeatures {
        viewBinding true
    }
}


dependencies {
    implementation 'com.sudoplatform:sudouser:11.1.1'
    implementation 'com.sudoplatform:sudositereputation:1.3.1'
    implementation "com.sudoplatform:sudoentitlements:3.0.0"

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'

    def coroutine_version = "1.4.2"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutine_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutine_version"

    implementation 'androidx.appcompat:appcompat:1.3.0'
    implementation 'androidx.core:core-ktx:1.5.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    def nav_version_ktx = '2.3.5'
    implementation "androidx.navigation:navigation-fragment-ktx:$nav_version_ktx"
    implementation "androidx.navigation:navigation-ui-ktx:$nav_version_ktx"

    implementation 'com.google.code.gson:gson:2.8.7'
    implementation 'com.google.android.material:material:1.4.0-rc01'

    def androidxTest = "1.3.0"
    def espresso = "3.3.0"
    androidTestImplementation "androidx.test:core:$androidxTest"
    androidTestImplementation "androidx.test:core-ktx:$androidxTest"
    androidTestImplementation "androidx.test.ext:junit:1.1.2"
    androidTestImplementation "androidx.test.ext:junit-ktx:1.1.2"
    androidTestImplementation "androidx.test:runner:$androidxTest"
    androidTestImplementation "androidx.test:rules:$androidxTest"
    androidTestImplementation "androidx.test.espresso:espresso-core:$espresso"
    androidTestImplementation "androidx.test.espresso:espresso-contrib:$espresso"
}

// Jacoco test coverage
apply plugin: 'jacoco'

task jacocoTestReport(type: JacocoReport, dependsOn: "testDebugUnitTest") {
    group = "Reporting"
    description = "Generate Jacoco coverage reports"
    classDirectories.setFrom(
            fileTree(
                    dir: "${buildDir}/tmp/kotlin-classes/debug",
                    excludes: ['**/R.class',
                               '**/R$*.class',
                               '**/BuildConfig.*',
                               '**/Manifest*.*']
            )
    )
    sourceDirectories.setFrom(files("${buildDir.parent}/exampleapp/src/main/java"))
    executionData.setFrom(fileTree(["dir":"$buildDir", "includes":["**/*.exec", "**/*.ec"]]))
    reports {
        xml.enabled = true
        html.enabled = true
    }
}


// Kotlin Lint
apply plugin: 'org.jmailen.kotlinter'

kotlinter {
    ignoreFailures = false
    reporters = ['checkstyle', 'plain']
    experimentalRules = false
}

// Vulnerability scanning
if (project.file("${rootProject.projectDir}/util/vulnerability-scan.gradle").exists()) {
    apply from: "${rootProject.projectDir}/util/vulnerability-scan.gradle"
}

// Sonarqube code analysis
if (project.file("${rootProject.projectDir}/util/sonarqube.gradle").exists()) {
    ext.sonarProjectKey = "sudo-sitereputation-example-android"
    ext.sonarProjectName = "sudo-sitereputation-example-android"
    ext.sonarExclusions = ["*.png", "*.jks", "*.json", "*.key"]
    apply from: "${rootProject.projectDir}/util/sonarqube.gradle"
}
