apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-parcelize'
apply plugin: 'androidx.navigation.safeargs.kotlin'

android {
    compileSdkVersion 31
    defaultConfig {
        applicationId 'com.sudoplatform.direlayexample'
        minSdkVersion 24
        targetSdkVersion 31
        versionCode 1
        versionName "3.0.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    sourceSets {
        main {
            resources.srcDirs += ['/var/anonyome_key']
        }
        androidTest {
            resources.srcDirs += ['/var/anonyome_key']
        }
    }
    compileOptions {
        sourceCompatibility 11
        targetCompatibility 11
    }
    kotlinOptions {
        jvmTarget = "11"
    }
    packagingOptions {
        pickFirst("META-INF/atomicfu.kotlin_module")
        pickFirst("META-INF/kotlinx-coroutines-core.kotlin_module")
    }
    buildFeatures {
        viewBinding true
    }
}


dependencies {

    // Sudo Platform
    implementation "com.sudoplatform:sudokeymanager:5.2.0"
    implementation "com.sudoplatform:sudodirelay:3.0.0"
    implementation "com.sudoplatform:sudouser:15.0.0"
    implementation 'com.sudoplatform:sudoprofiles:11.0.1'
    implementation 'com.sudoplatform:sudoentitlements:6.0.1'

    // Peer Connection Storage
    implementation "androidx.room:room-runtime:$room_version"
    kapt "androidx.room:room-compiler:$room_version"

    // Posting to peer
    implementation "com.squareup.okhttp3:okhttp:$okhttp_version"

    // QR CODE SCANNING
    implementation 'com.github.yuriy-budiyev:code-scanner:2.1.2'
    implementation "com.google.zxing:core:3.4.0"

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    def coroutine_version = "1.6.0-native-mt"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutine_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutine_version"

    implementation 'androidx.appcompat:appcompat:1.4.1'
    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'

    def fragment_version = "1.5.5"
    implementation "androidx.fragment:fragment:$fragment_version"
    implementation "androidx.fragment:fragment-ktx:$fragment_version"
    implementation "androidx.navigation:navigation-fragment:$nav_version"
    implementation "androidx.navigation:navigation-fragment-ktx:$nav_version"
    implementation "androidx.navigation:navigation-ui-ktx:$nav_version"

    implementation 'com.google.code.gson:gson:2.9.0'
    implementation 'com.google.android.material:material:1.5.0'

    def androidxTest = "1.5.0"
    def espresso = "3.4.0"
    androidTestImplementation "androidx.test:core:$androidxTest"
    androidTestImplementation "androidx.test:core-ktx:$androidxTest"
    androidTestImplementation "androidx.test.ext:junit:1.1.5"
    androidTestImplementation "androidx.test.ext:junit-ktx:1.1.5"
    androidTestImplementation "androidx.test:runner:$androidxTest"
    androidTestImplementation "androidx.test:rules:$androidxTest"
    androidTestImplementation "androidx.test.espresso:espresso-core:$espresso"
    androidTestImplementation "androidx.test.espresso:espresso-contrib:3.3.0" // 3.3.0 due to hamcrest resolution issue
}

// Kotlin Lint
apply plugin: 'org.jmailen.kotlinter'

kotlinter {
    ignoreFailures = false
    reporters = ['checkstyle', 'plain']
    experimentalRules = false
}

// Vulnerability scanning
if (project.file("${rootProject.projectDir}/util/vulnerability-scan.gradle").exists()) {
    apply from: "${rootProject.projectDir}/util/vulnerability-scan.gradle"
}

// Sonarqube code analysis
if (project.file("${rootProject.projectDir}/util/sonarqube.gradle").exists()) {
    ext.sonarProjectKey = "sudo-di-relay-example-android"
    ext.sonarProjectName = "sudo-di-relay-example-android"
    ext.sonarExclusions = ["*.png", "*.jks", "*.json", "*.key"]
    apply from: "${rootProject.projectDir}/util/sonarqube.gradle"
}
